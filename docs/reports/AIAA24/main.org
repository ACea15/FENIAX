#+setupfile: ./config.org
* House keeping  :noexport: 
#+begin_src elisp :results none :tangle no :exports none
    (add-to-list 'org-structure-template-alist
    '("sp" . "src python :session (print pythonShell)"))
    (add-to-list 'org-structure-template-alist
    '("se" . "src elisp"))
    (setq org-confirm-babel-evaluate nil)
    (define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link)
    (setq org-latex-pdf-process
      '("latexmk -pdflatex='pdflatex --syntex=1 -interaction nonstopmode' -pdf -bibtex -f %f"
        "latexmk -pdflatex='pdflatex --syntex=1 -interaction nonstopmode' -pdf -bibtex -f %f"))
    ;; (setq org-latex-pdf-process (list "latexmk -f -pdf -interaction=nonstopmode -output-directory=%o %f"))
    (pyvenv-workon "fem4inasdev")
    (require 'org-tempo)
    ;; Veval_blocks -> eval blocks of latex
    ;; Veval_blocks_run -> eval blocks to obtain results
    (setq Veval_blocks "yes") ;; yes, no, no-export
    (setq Vpics "png") ;; yes, no, no-export   
    (setq Veval_blocks_run "yes")
    (setq pythonShell "*py1*")
    ;; export_blocks: code, results, both, none
    (setq export_blocks  "results")  
#+end_src

* Load modules :noexport: 
:PROPERTIES:
:header-args: :mkdirp yes  :session (print pythonShell) :noweb yes  :eval (print Veval_blocks) :exports (print export_blocks) :comments both
:END:

#+begin_src python  :results none 
  import plotly.express as px
  import pyNastran.op4.op4 as op4
  import matplotlib.pyplot as plt
  import pdb
  import datetime
  import os
  import shutil
  REMOVE_RESULTS = False
  #   for root, dirs, files in os.walk('/path/to/folder'):
  #       for f in files:
  #           os.unlink(os.path.join(root, f))
  #       for d in dirs:
  #           shutil.rmtree(os.path.join(root, d))
  # 
  if os.getcwd().split('/')[-1] != 'results':
      if not os.path.isdir("./figs"):
          os.mkdir("./figs")
      if REMOVE_RESULTS:
          if os.path.isdir("./results"):
              shutil.rmtree("./results")
      if not os.path.isdir("./results"):
          print("***** creating results folder ******")
          os.mkdir("./results")
      os.chdir("./results")
#+end_src

#+NAME: PYTHONMODULES
#+begin_src python  :results none  :tangle ./results/run.py
  import pathlib
  import plotly.express as px
  import pickle
  import jax.numpy as jnp
  import jax
  import pandas as pd
  import numpy as np
  import fem4inas.preprocessor.configuration as configuration  # import Config, dump_to_yaml
  from fem4inas.preprocessor.inputs import Inputs
  import fem4inas.fem4inas_main
  import fem4inas.plotools.uplotly as uplotly
  import fem4inas.plotools.utils as putils
  import fem4inas.preprocessor.solution as solution
  import fem4inas.unastran.op2reader as op2reader
  import fem4inas.plotools.nastranvtk.bdfdef as bdfdef
  from tabulate import tabulate
#+end_src

* Run models
:PROPERTIES:
:header-args: :mkdirp yes  :session (print pythonShell) :noweb yes :tangle ./results/run.py :eval (print Veval_blocks_run) :exports (print export_blocks) :comments both
:END:

- Models run on this exercise:

#+INCLUDE: "./runs.org::*RunModels" :only-contents t

* Introduction
#+INCLUDE: "./sec_intro.org::*Introduction" :only-contents t
* Theory and implementation
#+INCLUDE: "./sec_intro.org::*Theory and implementation" :only-contents t

* Results
:PROPERTIES:
:header-args: :mkdirp yes  :session (print pythonShell) :noweb yes :tangle ./results/examples.py :eval (print Veval_blocks) :exports (print export_blocks) :comments both
:END:

#+INCLUDE: "./sec_results.org::*Results" :only-contents t

* Conclusions
This paper has presented a modal-based description that incorporates geometrically nonlinear effects due to structural slenderness onto generic FE models initially built for linear analysis. This nonlinear aeroelastic framework accounts for follower aerodynamic forces, geometric stiffening and the coupling between elastic and rigid-body DoF.
While the underlying theory had already been introduced, a new implementation was put in-place for both high-performance and software modularity, with the numerical library JAX as the engine powering the computations. This has allowed time-domain computations in near real-time with two orders of magnitude speed-ups compared to conventional implementations.
Three major highlights about the new implementation have been introduced in this work: 1) the propagation of derivatives in the solution process via the AD tool embedded in JAX with structural and aeroelastic examples that include static and dynamic responses; 2) show how the program running the computations can be deployed on standard CPUs but also on modern hardware architectures such as GPUs, and demonstration of performance gains with accelerations of over 30 times with respect to the CPU for large problems; 3) the ability to recover the full 3D state from the reduced-order-model was  verified against MSC Nastran full nonlinear solution.
This completes a differentiated aeroelastic framework that can run very efficiently in modern hardware architectures while enhancing traditional FE models that can be very complex by construction but lack the physics of geometrically nonlinear effects.
\\
A relevant amount of test cases accompany the software, of which a subset has been presented herein to illustrate the aforementioned features in the code. They have have been arranged in order of model complexity. Firstly, a very flexible, unsupported shell structure undergoing coupled rigid and flexible motions in vacuum. Secondly, a representative model of an aircraft without engines and fuselage is employed to verify the 3D structural static and dynamic nonlinear response against MSC Nastran and their corresponding sensitivities against finite-differences. Lastly, the dynamic aeroelastic response to a gust on a full aircraft model built to industry standards is shown together with the derivatives with respect to flow and gust parameters. 
\\
As for future work, a strategy to compute manoeuvre and dynamic load envelopes that can also be differentiated via AD will be built. This will be enabled using parallelisation of distributed accelerators such that the thousands of loads cases are computed fast. 
Increasing the fidelity in the load calculations to consider CFD-based aerodynamics would be an additional necessary step in order to achieve a more accurate nonlinear aeroelastic methodology. 

bibliographystyle:plain
# bibliography:/home/acea/Documents/Engineering.bib
bibliography:~/Documents/Engineering.bib

