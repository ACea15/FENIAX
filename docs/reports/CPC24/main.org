#+setupfile: ./config.org

#+begin_abstract
A novel methodology is presented in this paper for the structural and aeroelastic analysis of large engineering systems with slender components, such as aircraft.
Leveraging on the numerical library JAX, a nonlinear formulation based on velocities and strains enables a highly vectorised codebase that is especially suitable for the integration of aerodynamic loads which naturally appear as follower forces. On top of that, JAX automatic differentiation capabilities lead to a differentiable software that can be embedded into broader multidisciplinary frameworks. 
The general solution starts from a linear Finite-Element (FE) model of arbitrary complexity, on which a structural model order reduction is performed. A nonlinear description of the reduced model follows, with the corresponding reconstruction of the full 3D dynamics. Both highly accurate and efficient solutions for representative aircraft models are shown. An extensive verification has been carried out by comparison with MSC Nastran full-FE linear and nonlinear solutions.
Furthermore the nonlinear gust response of an industrial configuration with over half a million degrees-of-freedom is computed, and it is faster than its frequency-based, linear equivalent as implemented by the commercial package. Therefore this could be harnessed by aircraft loads engineers to add geometrically nonlinear effects to their existing workflows at no extra computational effort.
Finally, automatic differentiation on both static and dynamic problems is validated against finite-differences, which combined with a near real-time performance of the solvers opens new possibilities for aeroelastic studies and design optimisation.
\\

*Program summary*
Program Title: FENIAX 
/Library link to program files:/ https://github.com/ACea15/FENIAX/tree/master/docs/reports/CPC24
/Developerâ€™s repository link:/ https://github.com/ACea15/FENIAX
/Licensing provisions:/ GNU GPLv3
/Programming language:/ Python
/Nature of problem:/ Aeroelastic solutions that couple structural and fluid domains are paramount in the study of many engineering structures such aeroplanes, bridges or wind-turbines. They often feature slender and light components that can potentially undergo large deflections that require of geometrically nonlinear modelling tools, which are linked to higher computational resources and potentially prohibitively simulation times. In addition, since the advent of computers, organizations have gathered an expertise to build large finite-element (FE) models based on linear formulations that might not be easily amendable for nonlinear analysis. 
We propose a non-intrusive framework to enhance complex FE structural and aeroelastic models with geometric nonlinearities -including follower aerodynamic forces, geometric stiffening of the structure and shortening effects-, and the ability to perform time-domain dynamic analysis in near-real time. 
/Solution method:/ We have built the library FENIAX, a nonlinear aeroelastic toolbox that is automatic differentiable and can be deployed on modern hardware architectures. It is powered by Google's high-performance JAX library, originally developed towards machine learning problems but that has also proved very useful for Scientific computation. The inputs to the library are controlled via a yaml file or a python dictionary and the output are efficient binary numpy arrays. A modular architecture allows easy extension of the core routines, more importantly as new features continue to be added.
/Additional comments including restrictions:/ FENIAX is not a stand-alone library as it requires inputs from standard FE packages. Other open-source third-party Python libraries are automatically installed. Currently FENIAX only runs on a single processing unit but work is already in place to make it compatible with multi-process environments. The library includes a test-suite with over a hundred tests and runs on Linux and macOS operating systems.
#+end_abstract
# https://stackoverflow.com/questions/44414584/how-to-export-a-org-mode-table-to-latex-with-the-correct-placement-h
* House keeping  :noexport: 
#+begin_src elisp :results none :tangle no :exports none
  (add-to-list 'org-structure-template-alist
  '("sp" . "src python :session (print pythonShell)"))
  (add-to-list 'org-structure-template-alist
  '("se" . "src elisp"))
  (setq org-confirm-babel-evaluate nil)
  (define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link)
  (setq org-latex-pdf-process
        '("latexmk -pdflatex='pdflatex --syntex=1 -shell-escape -interaction nonstopmode' -pdf -bibtex -f %f"
          "latexmk -pdflatex='pdflatex --syntex=1 -shell-escape -interaction nonstopmode' -pdf -bibtex -f %f"))
  ;; (setq org-latex-pdf-process (list "latexmk -f -pdf -interaction=nonstopmode -output-directory=%o %f"))
  (pyvenv-workon "fem4inasdev")
  (require 'org-tempo)
  ;; Veval_blocks -> eval blocks of latex
  ;; Veval_blocks_run -> eval blocks to obtain results
  (setq Veval_blocks "yes") ;; yes, no, no-export 
  (setq Veval_blocks_run "no-export")
  (setq Vpics "png") ;; yes, no, no-export   
  (setq pythonShell "py2")
  ;; export_blocks: code, results, both, none
  (setq export_blocks  "results")  
#+end_src

* Load modules :noexport: 
:PROPERTIES:
:header-args: :mkdirp yes  :session (print pythonShell) :noweb yes  :eval (print Veval_blocks) :exports (print export_blocks) :comments both
:END:

#+begin_src python  :results none 
  import plotly.express as px
  import pyNastran.op4.op4 as op4
  import matplotlib.pyplot as plt
  import pdb
  import datetime
  import os
  import shutil
  REMOVE_RESULTS = False
  #   for root, dirs, files in os.walk('/path/to/folder'):
  #       for f in files:
  #           os.unlink(os.path.join(root, f))
  #       for d in dirs:
  #           shutil.rmtree(os.path.join(root, d))
  # 
  if os.getcwd().split('/')[-1] != 'results':
      if not os.path.isdir("./figs"):
          os.mkdir("./figs")
      if REMOVE_RESULTS:
          if os.path.isdir("./results"):
              shutil.rmtree("./results")
      if not os.path.isdir("./results"):
          print("***** creating results folder ******")
          os.mkdir("./results")
      os.chdir("./results")
#+end_src

#+NAME: PYTHONMODULES
#+begin_src python  :results none  :tangle ./results/run.py
  import pathlib
  import plotly.express as px
  import pickle
  import jax.numpy as jnp
  import jax
  import pandas as pd
  from plotly.subplots import make_subplots
  import numpy as np
  import fem4inas.preprocessor.configuration as configuration  # import Config, dump_to_yaml
  from fem4inas.preprocessor.inputs import Inputs
  import fem4inas.fem4inas_main
  import fem4inas.plotools.uplotly as uplotly
  import fem4inas.plotools.utils as putils
  import fem4inas.preprocessor.solution as solution
  import fem4inas.unastran.op2reader as op2reader
  import fem4inas.plotools.nastranvtk.bdfdef as bdfdef
  from tabulate import tabulate
#+end_src

:PROPERTIES:
:header-args: :mkdirp yes  :session (print pythonShell) :noweb yes :tangle ./results/run.py :eval (print Veval_blocks_run) :exports (print export_blocks) :comments both
:END:

* Introduction
#+INCLUDE: "./sec_text.org::*Introduction" :only-contents t
* Theory and implementation
#+INCLUDE: "./sec_text.org::*Theory and implementation" :only-contents t
* Examples
:PROPERTIES:
:header-args: :mkdirp yes  :session (print pythonShell) :noweb yes :tangle ./results/examples.py :eval (print Veval_blocks) :exports (print export_blocks) :comments both
:END:
#+INCLUDE: "./sec_examples.org::*Examples" :only-contents t
* Conclusions
This paper has presented a modal-based description that incorporates geometrically nonlinear effects due to structural slenderness onto generic FE models initially built for linear analysis. The underlying formulation is written in the material frame of reference with velocities and internal forces as main variables, thus facilitating the construction of a nonlinear aeroelastic framework that seamlessly accounts for follower aerodynamic forces, geometric stiffening and the coupling between elastic and rigid-body DoF.
Leveraging on the numerical library JAX, a new implementation has been built for both high-performance and software modularity. The combination of a performant codebase with modal formulation that produces nonlinear reduced-order models, has allowed time-domain computations in near real-time with two orders of magnitude speed-ups compared to conventional implementations.
Furthermore, the propagation of derivatives in the solution process via the AD tool embedded in JAX has been successfully demonstrated on structural and aeroelastic problems. Lastly we have shown the ability to recover the full 3D state from the reduced-order-model with a verification against full FE nonlinear solution.
Thus completing a differentiated aeroelastic framework that can run very efficiently in modern hardware architectures while enhancing traditional FE models that can be very complex by construction but lack the physics of geometrically nonlinear effects.
\\
Two examples have been introduced to show the main features of the approach: a representative model of an aircraft without engines and fuselage is employed to validate the 3D structural static and dynamic nonlinear response against commercial FE software as well as their corresponding sensitivities against finite-differences; the dynamic aeroelastic response to an atmospheric gust on a full aircraft configuration is shown together with the derivatives with respect to flow and gust parameters.
The computational advantage of the methodology is demonstrated throughout using relevant benchmarks against linear and nonlinear solutions. 
\\
As for future work, a strategy to compute manoeuvre and dynamic load envelopes that can also be differentiated via AD will be built. This will be enabled using JAX capabilities for parallelisation of distributed accelerators such that the thousands of loads cases are computed fast. 
Increasing the fidelity in the load calculations to consider CFD-based aerodynamics would be an additional necessary step in order to achieve a more accurate nonlinear aeroelastic methodology. 

\appendix
* Nonlinear Modal Reduced Order Models
#+INCLUDE: "./sec_text.org::*Nonlinear Modal Reduced Order Models" :only-contents t

bibliographystyle:plain
# bibliography:/home/acea/Documents/Engineering.bib
bibliography:~/Documents/Engineering.bib

