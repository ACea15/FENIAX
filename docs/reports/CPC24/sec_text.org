#+setupfile: ./config.org

# https://stackoverflow.com/questions/44414584/how-to-export-a-org-mode-table-to-latex-with-the-correct-placement-h
* House keeping  :noexport: 
#+begin_src elisp :results none :tangle no :exports none
  (add-to-list 'org-structure-template-alist
  '("sp" . "src python :session (print pythonShell)"))
  (add-to-list 'org-structure-template-alist
  '("se" . "src elisp"))
  (setq org-confirm-babel-evaluate nil)
  (define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link)
  (setq org-latex-pdf-process
        '("latexmk -pdflatex='pdflatex --syntex=1 -shell-escape -interaction nonstopmode' -pdf -bibtex -f %f"
          "latexmk -pdflatex='pdflatex --syntex=1 -shell-escape -interaction nonstopmode' -pdf -bibtex -f %f"))
  ;; (setq org-latex-pdf-process (list "latexmk -f -pdf -interaction=nonstopmode -output-directory=%o %f"))
  (pyvenv-workon "fem4inas")
  (require 'org-tempo)
  ;; Veval_blocks -> eval blocks of latex
  ;; Veval_blocks_run -> eval blocks to obtain results
  (setq Veval_blocks "yes") ;; yes, no, no-export 
  (setq Veval_blocks_run "no-export")
  (setq pythonShell "py2")
  ;; export_blocks: code, results, both, none
  (setq export_blocks  "results")  
#+end_src

* Introduction
The field of aeroelasticity, which encompasses the interaction between structural, aerodynamic and inertia forces [[cite:&COLLAR1978]], has been dominated by linear methods, in part due to its inherit complexity and demanding simulation times.
The assumptions underpinning linear analysis may not longer be valid with the current  push towards lighter, more flexible materials. This is certainly the case for aviation where it has already being noted the need for formulations that include nonlinear effects to enhance current modelling techniques but that also allow rapid data turnaround cite:&LIVNE2018.  
This is even more critical for more efficient high-aspect-ratio wing designs whose sizing loads may be determined by atmospheric disturbances cite:&CESNIK2014, and for which time-domain analysis is needed in order to capture the relevant nonlinear phenomena. Similar but also new challenges are encountered in radical configurations [[cite:&CAVALLARO2015]], surrounded by uncertainty and perhaps held back by the lack of more capable simulations.
The certification process also adds strong requirements to the computational solutions available, with new airborne vehicles requiring  100,000s of load cases simulations cite:&Kier2017, including manoeuvres and gust loads at different velocities and altitudes, and for a range of mass cases and configurations. 
\\
The aeroelastic solution involves a fluid-structure interaction problem with challenging physics for which various numerical methods have been proposed [[cite:&HOU2012]] for high fidelity analysis. Parallel structural solvers have been developed [[cite:&BOOPATHY2019a]], and integrated into a geometrically nonlinear aeroelastic optimization [[cite:&GRAY2023]] of the steady solution. Nonlinear transient solutions have also been demonstrated [[cite:&GEUZAINE2003]], [[cite:&FARHAT2006]]. 
Such methods that include detailed model and new physics normally incur in prohibitively expensive computational times. To tackle this, projection based reduced order models (ROMs) have been employed [[cite:&CHOI2020]] [[cite:&BONCORAGLIO2021a]], and are also blended with machine learning models [[cite:&SWISCHUK2019]]. Some of the drawbacks these approaches suffer from are the offline construction of an expensive database, the robustness of the process when solving nonlinear problems whose dynamics might fall outside the training envelope, or their acceptance in the certification process.
In contrast, geometrically nonlinear structural reduced order models have been developed [[cite:&TOUZE2021]] that do not require of a database of snapshots solutions and are non-intrusive [[cite:&MIGNOLET2013]], i.e. can deal with FE models from commercial programs as they do not need direct access to the nonlinear element formulations. This is an important point to scale the analysis to the supply and certification chain. 
One of the bottlenecks of these methods is the selection of the reduction basis that accurately captures the nonlinear stiffness coefficients of the reduced model. Successful strategies have included augmentation of the linear normal modes (LNMs) with modal derivatives [[cite:&KARAMOOZMAHDIABADI2021]] or the use of arbitrary linear bases with static modal derivatives [[cite:&RUTZMOSER2017]]. The application of these ROMs to the aeroelastic solution of clamped wings have also been demonstrated in [[cite:&MEDEIROS2020]]. 
While being simulation-free in the dynamic response, these approaches still need of nonlinear static solutions to compute quadratic and cubic terms in the expansions and finite differences approximation of the stiffness. This can hinder their application to large scale commercial models which can showcase features for linear analysis that are not available in the nonlinear solution.
\\
Based on the considerations highlighted above, this works blends the solution of partial differential equations (PDEs), reduced order models that maintain the dynamic characteristics of the problem, and the integration with commercial packages for aeroelasticity while enhancing them with geometrically nonlinear effects.
Grounded on previous developments cite:&CEA2021b, cite:&CEA2023, a new implementation is presented that achieves remarkable computational performance, can be deployed on accelerators and is end-to-end differentiable via Algorithmic Differentiation (AD).
The numerical library JAX cite:&jax2018github was leveraged to produce the highly vectorised, differentiated routines that are managed by a modular, object-oriented approach in Python. The power of JAX for scientific computation has been proved recently in various disciplines such as fluid dynamics cite:&BEZGIN2023, solid mechanics cite:&XUE2023, and drift-diffusion models of photovoltaic cells [[cite:&MANN2022]].
It provides a unified computational framework that can be seamlessly deployed on CPUs, GPUs and TPUs without needing to resort to Domain Specific Languages (DSL) [[cite:&LUSHER2021]]. In addition it also features powerful parallelisation capabilities across devices, a hot research topic given the new era we enter where software does not outlive hardware but potentially the other way around.
The codebase has been packaged into the software $\textt{FENIAX}$ (Finite Element models for Nonlinear Intrinsic Aeroelastics in JAX).
\\
For structural part of the problem, we start with an arbitrarily complex build-up FE model, from which a skeleton-like substructure along the main load paths is derived, on which modal shapes and nonlinear couplings are evaluated in intrinsic variables (velocities and strains) [[cite:&WANG2015a]]. They conform a basis of a Galerkin-projection of the geometrically-nonlinear 1D description [[cite:&HODGES2003]] after which the projected equations are solved in time-domain. Advantages of the approach are its direct and accurate map between the 3D and 1D domains, as it only requires a well known modal dynamic condensation. We show in this work the accuracy in the reconstruction of the full FE solution. The overall procedure has been implemented in what we have named as \emph{Nonlinear Modal Reduced Order Model} (NMROM). 
The strength of the structural description is summarised in the following features:

1. Two fold reduced order model, firstly via a dynamic condensation and secondly with the selection of modal shapes in the solution, yielding very fast computations.
2. Geometric stiffening, shortening effects and nonlinear coupling between elastic and rigid-body degrees-of-freedom (DoF) added along a dominant dimension of generic FE models.
3. Non-intrusive process in the construction of the reduced model that also does not need of any system identification, only the linear stiffness mass matrices and their LNMs, and therefore it is seamlessly compatible with commercial packages.

It is worth remarking that while the NMROMs have been only applied in this work to aircraft structures, it could perfectly being used for other engineering structures that display one dominant dimension such as bridges or wind turbines. 
As for the aeroelastic coupling, aerodynamic forces are obtained herein from the Doublet Lattice Method (DLM), a method that solves the compressible potential equation of fluids and it is still the de-facto solution among practitioners. Panel-based unsteady aerodynamic models have been shown to give satisfactory results for loads analysis [[cite:&RIPEPI2018]] and it is also easily amendable for Computational Fluids Aerodynamics (CFD) corrections [[cite:&THORMANN2014]]. Nonetheless, the approach we present could also be used directly with generalised aerodynamic matrices (GAFs) from higher fidelity methods.
A rational function approximation (RFA) is used to bring the aerodynamic response in frequency domain to the time domain [[cite:&Roger1977]]. We have also presented a more efficient data-driven approach that circumvents the lag selection process of the RFA in cite:&PALACIOS2023a and which would also be suitable for more accurate (CFD). The combination of geometrically nonlinear structural formulation with a linear aerodynamic description have been shown to provide a good compromise for moderately large deformations [[cite:&DEMASI2009]].
The resulting aeroelastic solution have the following characteristics:

1. A formulation written in the material frame of reference allowing for naturally appearing follower aerodynamic forces, i.e. aerodynamic forces follow the structural deformations.
2. A robust aeroelastic solution that is compatible with the complex FE models built by organizations and the tools currently in used in the certification process.
3. Very efficient run times that achieve an enhancement of linear solutions with geometrically nonlinear effects at a negligible extra cost.
\\
The structure of the rest of the paper is as follows. Sec. [[Theory and implementation]] presents a summary of the process and the mathematical description that conforms the backbone behind the computational implementation of \texttt{FENIAX}, the high performance software for aeroelasticity we have developed.
A more detailed description of the NMROMs is provided in Appendix [[Nonlinear Modal Reduced Order Models]].
Sec. [[Examples]] shows the verification cases that cover the static and dynamic structural response of a simplified aircraft model, and the aeroelastic response to gusts of a full aircraft configuration. A very good agreement was found between the full 3D solutions and the reconstructed field from the NMROMs, and the AD is validated against finite-differences in all the cases presented. The performance edge of the implementation is highlighted in all of the examples with benchmarks against commercial software. 
Lastly, sec. [[Conclusions]] summarises the the achievements and further developments planned for future work.

* Theory and implementation
In this section we briefly describe the backbone theory of the proposed methods for nonlinear aeroelasticity modelling. For further details, see [[cite:&PALACIOS2019]] and cite:&CEA2021b.
A major contribution with respect to our previous works is a new computational implementation that achieves accelerations of over 2 orders of magnitude compared to standard implementations[fn:2::Both the new implementation and the examples of this paper can be found at https://github.com/ACea15/FENIAX.]. Furthermore, a highly modular, flexible architecture based on software design patterns has been put in place cite:&CEA2024.
The key enabler was moving from standard Python to a highly vectorised, JAX-based numerical implementation.
Next we described the main formulation that leads to a geometrically nonlinear enhancement of generic aircraft models and its integration into an aeroelastic framework, along with some implementation details.
** Airframe idealisation
An illustration of the overall solution process is presented in Fig. [[workflow]].  
We start with a global FE model of the airframe for which a reduced model along the main load-paths is obtained from a static or dynamic condensation. This model maps the very sparse stiffness and mass matrices, $\pmb{K}$ and $\pmb{M}$ into the much smaller condensed matrices, $\pmb{K}_a$ and $\pmb{M}_a$ and appropriately captures the stiffness and inertia properties.
A database of Aerodynamic Influence Coefficient matrices (AICs) is also needed as input; this may be given in a CFD-based ROM cite:&RIPEPI2018, in time-domain panel method, as in the Unsteady Vortex Lattice (UVLM) cite:&Maraniello2019, or in frequency domain, as in the Doublet Lattice  (DLM), in which case a RFA in used to amend the data for time-domain simulations. 
The modal-based aerodynamics and the condensed matrices of the structure are input into a our analysis framework that builds the nonlinear dynamics of the condensed model without having to call back the stiffness and mass matrices. To achieve this, a formulation based on velocities and strains in the material frame of reference is employed. 
\\
After the state of the condensed model has been solved for, the full 3D state can be reconstructed: firstly the displacements of the cross-sectional nodes linked to the reduced model via the interpolation elements are computed using the positions and rotations of the latter; secondly, Radial Basis Functions (RBFs) kernels are placed on those cross-sections, thus building an intermediate model that is utilised to extrapolate the positions of the remaining nodes in the full model. We demonstrate in this work that this process yields accurate results on representative aircraft structures when compared to simulations with the full FEM. 
#+NAME: workflow
#+CAPTION: Workflow of the solution process
#+ATTR_LATEX: :width 1.\textwidth 
[[./figs/workflowCPC.pdf]]

The underlying mathematical description of the reduction process to build the so called Nonlinear Modal Reduced Order Model (NMROM) is described in the Appendix. The main components in the solution are given in Algorithm [[alg:components]]: the intrinsic modes are computed from the condensed FE nodal positions and matrices and subsequently the nonlinear terms, $\bm \Gamma$, are obtained as the integral along the reduced domain of the modal couplings; the nonlinear system of equations is built and time-marched in time to yield the solution in modal coordinates, $\bm q$;
the intrinsic variables of the solution (velocities, $\bm{X}_1$,  internal forces, $\bm{X}_{2}$ and strains, $\bm{X}_{3}$) are recovered from the modal coordinates and the intrinsic modes; finally the positional and rotational field of the reduced model are computed via integration of the strain field. 
The time complexity of the various components is stated on the side of the algorithm with $N_m$ the number of modes kept in the solution, $N_n$ the nodes in the reduced model and $N_t$ the total number of time-steps.

#+NAME: alg:components
\begin{algorithm}[h!]
\DontPrintSemicolon
\SetKwInOut{Input}{input}
\SetKwInOut{Output}{output}
\Input{Input file: settings.yaml; FE model: $\bm{K}_a$, $\bm{M}_a$, $\bm{X}_a$; Aerodynamic matrices: $\bm{\mathcal{A}}$}
\Output{Nonlinear aeroelastic solution}
\Begin{
 \BlankLine
$\bm{\phi}$, $\bm{\psi}$  $\longleftarrow$ modes($\bm{K}_a$, $\bm{M}_a$, $\bm{X}_a$) \Comment{Intrinsic modes: O($N_n^2 \times N_m$)}  \;
$\bm{\Gamma}$  $\longleftarrow$ couplings($\bm{\phi}$, $\bm{\psi}$) \Comment{Nonlinear couplings O($N_n \times N_m^3$)} \;
$\bm{q}$  $\longleftarrow$ system($\bm{\Gamma}$, $\bm{\mathcal{A}}$, $\bm{\phi}$, $\bm{X}_a$) \Comment{Modal coordinates: O($N_t \times$ N_m^3$)}  \;
$\bm{X}_1$, $\bm{X}_{2}$, $\bm{X}_{3}$   $\longleftarrow$ ivars($\bm{q}$, $\bm{\phi}$, $\bm{\psi}$) \Comment{velocity/strain fields: O($N_t \times N_m$)} \;
$\bm{r}_a$, $\bm{R}_{a}$   $\longleftarrow$ integration($\bm{X}_{3}, $\bm{X}_a$) \Comment{Positional/rotational fields: O($N_t \times N_n$)}  \;
\BlankLine
}
\caption{Main components in solution process}
\end{algorithm}

** Nonlinear aeroelastic system
The full aeroelastic solution is built extending the NMROMs equations in the Appendix with gravity forces, $\bm{\eta}_g$, aerodynamic forces and gust disturbances, $\bm{v}_g$. Control states can also be included [[cite:&CEA2021a]], but they are not necessary for this work.
For a set of reduced frequencies and a given Mach number, the DLM (or a higher fidelity aerodynamic method) yields the Generalised Aerodynamic Forces (GAFs). The current implementation uses Roger's rational function approximation to those GAFs which results in the follower modal forces:
\begin{equation}\label{eq3:eta_full}
\begin{split}
\bm{\eta}_a =  Q_\infty & \left(\vphantom{\sum_{p=1}^{N_p}} \pmb{\mathcal{A}}_0\bm{q}_0 +\frac{c}{2U_\infty}\pmb{\mathcal{A}}_1 \bm{q}_1 +\left(\frac{c}{2U_\infty}\right)^2 \pmb{\mathcal{A}}_2\dot{\bm{q}}_1   \right.  \\
& \left. + \pmb{\mathcal{A}}_{g0}\bm{v}_g +\frac{c}{2U_\infty}\pmb{\mathcal{A}}_{g1} \dot{\bm{v}}_g +\left(\frac{c}{2U_\infty}\right)^2 \pmb{\mathcal{A}}_{g2}\ddot{\bm{v}}_g +  \sum_{p=1}^{N_p} \pmb{\lambda}_p  \right) 
\end{split}
\end{equation}
where the $\pmb{\mathcal{A}}_is$ are real matrices, $c$ is the reference chord, $Q_\infty = \tfrac12\rho_\infty U_\infty^2$ is the dynamic pressure, $\pmb{\lambda}_p$ the aerodynamic states and $N_p$ the number of lags. The term $\bm{q}_0$ is the displacement modal amplitude and $\bm{q}_1$ is the velocity modal amplitude; note both displacement and velocity amplitudes are used to define the inputs to the aerodynamic subproblem.
Eq. \ref{eq3:eta_full} needs to be combined with linear system of ODEs describing the aerodynamic states:
\begin{equation}
\dot{\bm{\lambda}}_{p} &= Q_{\infty}\bm{\mathcal{A}}_{p+2}\pmb{q}_{1}
                       + Q_{\infty}\bm{\mathcal{A}}_{g(p+2)}\dot{\pmb{v}}_g
                       -\frac{2U_\infty\gamma_p}{c}\bm{\lambda}_{p}
 \qquad \textup{for} \qquad p=1,\ldots,N_p
\end{equation}

The coupling of the structure and aerodynamic equations combined with the aerodynamic lags, $\bm \lambda_p$, yields the following ODE system: 
\begin{equation}
\label{eq2:sol_qs}
\begin{split}
\dot{\pmb{q}}_{1} &=  \hat{\pmb{\Omega}}  \pmb{q}_{2} - \hat{\pmb{\Gamma}}_{1} \pmb{:} \left(\pmb{q}_{1} \otimes \pmb{q}_{1} \right) - \hat{\pmb{\Gamma}}_{2} \pmb{:} \left( \pmb{q}_{2} \otimes  \pmb{q}_{2} \right) + \hat{\bm{\eta}}  \\
\dot{\pmb{q}}_{2} &= -\pmb{\omega} \odot \pmb{q}_{1} + \pmb{\Gamma}_{2}^{\top} \pmb{:} \left( \pmb{q}_{2} \otimes  \pmb{q}_{1} \right) \\
\dot{\bm{\lambda}}_{p} &= Q_{\infty}\bm{\mathcal{A}}_{p+2}\pmb{q}_{1}
                       + Q_{\infty}\bm{\mathcal{A}}_{g(p+2)}\dot{\pmb{v}}_g
                       -\frac{2U_\infty\gamma_p}{c}\bm{\lambda}_{p}
\end{split}
\end{equation}
where $\odot$ is the  Hadamard product (element-wise multiplication), $\otimes$ is the tensor product operation and $\pmb{:}$ is the double dot product[fn:1: The double dot product represents a contraction of the last two indexes of the first tensor with the first two indexes of the second one; it however needs further specification as two alternative definitions can be adopted and here we opt for the following: \(\pmb{a} \pmb{:} \pmb{b} = a_{..ij} b_{ij..} \). This has implications on the definition of the transpose of \(\bm{\Gamma}_2 \) in the second equation since for high order tensors multiple transpose operators can be defined. Consistency is achieved by ensuring the dot product operation satisfies the following: \( \pmb{x} \cdot \left(\bm{\Gamma} \pmb{:} \left( \pmb{y} \otimes \pmb{z} \right)  \right) = \pmb{y} \cdot \left(\bm{\Gamma}^{\top} \pmb{:} \left(\pmb{z} \otimes \pmb{x} \right)  \right) \), which leads to the transpose of the third order tensor, \( \bm{\Gamma} = \Gamma^{ijk} \), as \( \bm{\Gamma}^{\top} = \Gamma^{jki} \).].
The form of the equations in compact tensorial notation is in fact the way they have been implemented and vectorised.
The aerodynamic added-mass effect has been moved to the left hand side such that $\bm{\mathrm{A}}_2 = (\pmb{I} - \frac{\rho c^2}{8}\pmb{\mathcal{A}}_2)^{-1}$, and it couples all DoF in modal velocities, $\pmb q_1$. Thus the natural frequency terms, $\pmb \omega$, become $\hat{\pmb{\Omega}} = \bm{\mathrm{A}}_2 \textup{diag}(\pmb{\omega})$ and the nonlinear terms $\hat{\pmb{\Gamma}} = \bm{\mathrm{A}}_2 \bm{\Gamma}$. The effect of all external forces, aero, $\bm{\eta}_a$, gravity, $\bm{\eta}_g$, and others, $\bm{\eta}_f$, are combined such that $\hat{\bm{\eta}} = \bm{\mathrm{A}}_2 \left( \left( \bm{\eta}_a - \frac{\rho c^2}{8} \pmb{\mathcal{A}}_2\dot{\bm{q}}_1 \right) +  \bm{\eta}_g + \bm{\eta}_f \right)$. 
The size of the system 
If instead of the dynamics the interest lies in the nonlinear static equilibrium to the external forces, the solution is posed as the following nonlinear system of equations, which is formed from Eqs. \ref{eq2:sol_qs} by setting velocities and accelerations to 0 ($\bm q_1 = \dot{\bm q}_1 = \pmb 0$):

\begin{equation}\label{eq:q_static}
\pmb F(\pmb{q}_{2}) &=  \pmb{\omega} \odot  \pmb{q}_{2}  - \pmb{\Gamma}_{2} \pmb{:} \left( \pmb{q}_{2} \otimes  \pmb{q}_{2} \right) + \bm{\eta}_a +  \bm{\eta}_g + \bm{\eta}_f = \bm 0 
\end{equation}

A load-stepping scheme has been implemented such that a pseudo-time variable controls the amount of load $\bm \eta$ that is applied in an iterative process of the Newton-Raphson solver. This becomes critical for the Newton-Raphson solvers to converge in very nonlinear problems and the pseudo-time variable also allows to maintain data structures similar to that of the dynamic solution. Our own Runge-Kutta solvers have been implemented and also integration with Diffrax is available, a JAX-based library that provides a large number of solvers and advanced features such as adjoints of the differential equations, [[cite:&kidger2021on]].
* Nonlinear Modal Reduced Order Models
The steps to construct the NMROMs are described here.
A dynamic condensation of the full FE model into the major structure load-paths is carried out first. This is based on linear theory and does not involve any simulation other than that assembling the FE matrices and applying a linear transformation for the reduction [[cite:&Qu2010]].
The nonlinear formulation written in terms of velocities and strains in the material frame of reference leads to constant mass and stiffness matrices, which makes possible the use of the original (linear) FE model only as a pre-processing step.  
Calculation of modal shapes in intrinsic variables completes the mapping from a linear description of a full FEM into a geometrically nonlinear formulation of its equivalent condensed model.
** Dynamic condensation of linear FE models
\label{sec:dynamic_condensation}
Model order reduction techniques aim to increase computational efficiency by reducing the size of the problem while maintaining its fundamental characteristics.
# Regarding industrial applications in the field of aeroelasticity, ROMs are very important, even when the majority of the analysis is linear, due to the need for fast simulations and the very large models that can surpass the millions of DoF.
# In aircraft loads analysis, trim and stability studies, it is common practice condensing the (linear) full-FE models into the major load paths of the aircraft, to reduce the total number of DoF to a few thousands.
Herein we not only use the ROM to reduce the size of the model, but also to represent a structure that can be modelled as a one-dimensional domain --making use of the slenderness of main structural components.
In order to obtain the condensed model, the degrees of freedom of the full model are divided into those on active (or master) nodes, located along the load path $\mathcal{P}$, and those of the omitted (or slave) nodes. The displacement vector can therefore be reordered as, $\pmb{u}_n= \left(\pmb{u}_a^\top \;\pmb{u}_o^\top\right)^\top$, and similarly for the Linear Normal Modes (LNMs) of the unloaded structure $\pmb{\Phi}=[\pmb{\Phi}_a^\top \; \pmb{\Phi}_o^\top]^\top$, so that the eigenvalue problem of the linear FE matrices $\bm{K}$ and $\bm{M}$ is arranged as,

\begin{equation}
\left( \begin{bmatrix}
\bm{K}_{aa} & \bm{K}_{ao} \\ \bm{K}_{oa} & \bm{K}_{oo}
\end{bmatrix} - \omega^2\begin{bmatrix}
\bm{M}_{aa} & \bm{M}_{ao} \\ \bm{M}_{oa} & \bm{M}_{oo}
\end{bmatrix}
\right)
\begin{pmatrix}
\bm{\Phi}_a \\ \bm{\Phi}_o
\end{pmatrix} = 0
\end{equation}
A linear dependency is now assumed between the omitted and the active degrees of freedom, $\pmb{\Phi}_o =  \pmb{T}_{oa} \pmb{\Phi}_a$, with $\pmb{T}_{oa} \in \mathbb{R}^{o\times a}$ the transformation matrix between both sets.
The quality of the transformation is determined by its accuracy in capturing a subset of interest of the full-system LNMs, which is linked to the spatial sampling that $\pmb{\Phi}_a$ introduces on the full domain.
In general, the condensation is dependent on the frequencies and forms a nonlinear eigenvalue problem where each modal shape,  with natural frequency, $\omega_j$, has one transformation matrix,
\begin{equation}\label{eq2:transformation_exact}
\pmb{T}_{oa}(\omega_j) = (\pmb{K}_{oo}-\omega^2_j \pmb{M}_{oo})^{-1}( \pmb{K}_{oa}- \omega_j^2 \pmb{M}_{oa}) \approx -(\pmb{K}_{oo}^{-1}+\omega^2_j\pmb{K}_{oo}^{-1}\pmb{M}_{oo}\pmb{K}_{oo}^{-1})(\pmb{K}_{oa}-\omega^2_j\pmb{M}_{oa})
\end{equation}
This is the so-called exact-condensation matrix, where we have also introduced Kidder's mode expansion cite:&Qu2010 approximation as used in [[cite:&CEA2021b]]. The first-order approximation of this equation is attained by letting $\omega_j =0$, thereby removing inertia effects. This results in a static condensation, proposed by Guyan and Irons in 1965 [[cite:&Guyan1965]], still one of the most popular condensation methods today, also known as Guyan reduction. Note that when the mass model consists only of lumped masses on the active degrees of freedom, $\pmb{M}_{oo} = \pmb{M}_{oa} = \pmb{0}$, Guyan reduction becomes the exact condensation. With the transformation matrix defined, the condensed stiffness and mass matrices are given as $\pmb{K}_a = \pmb{T}_{oa}^{\top} \pmb{K} \pmb{T}_{oa}$ and $\pmb{M}_a = \pmb{T}_{oa}^{\top} \pmb{M} \pmb{T}_{oa}$, and their associated modal shapes given as $\bm \phi_0$.
** Kinematics of aircraft main load-paths
This process of enhancing the linear 3D model with geometric nonlinearities along the slender dimension relies on the main assumption that cross-sectional deformations of the solid body in the reference configuration are linear and not coupled to the main dimension where nonlinearities are introduced \cite{CEA2021a}.
Applying the appropriate integration over the cross sectional reference area of the distributed traction forces, a Cosserat rod model is built, where the deformed state on the full domain is approximated by a deformable space curve $\mathcal{P}$ -- identified with the structure major load-paths. The primary variables  are the local inertial (linear and angular) velocities, grouped in the variable $\bm{x}_1(s, t)$, and internal force and moments combined in $\bm{x}_2(s, t)$. They are function of the 1D spatial dimension, $s$, and time, $t$. 
Applied forces and moments per unit length, $\bm{f}_1$, come naturally as follower forces and moments respectively. The equations are well described in \cite[Ch. 8]{PALACIOS2023}.
Constitutive properties are given by the compliance matrix, $\bm{\mathcal{C}}$, relating sectional forces and moments to strains and curvatures and the sectional mass matrix, $\bm{\mathcal{M}}$, linking velocities and momenta. 
# Finding a good approximation to these matrices is a common challenge in formulations that aim to build nonlinear 1D models from full FE models.
Importantly $\bm{\mathcal{C}}$ and $\bm{\mathcal{M}}$ are constant, i.e. they do not need updating with deformations, and this work circumvents having to calculate their explicit expressions by solving the equations in modal space and linking them to the modal shapes and their derivatives as first described in cite:&PALACIOS2012.
\begin{equation}\label{eq2:intrinsic_eqs}
\begin{split}
\mathcal{M}\dot{\pmb{x}}_1-\pmb{x}_2'-\pmb{\mathsf{E}}\bm{x}_2+ \lo_1(\pmb{x}_1)\mathcal{M}\pmb{x}_1 + \lo_2(\pmb{x}_2)\mathcal{C}\pmb{x}_2 & = \pmb{f}_1  \\
\mathcal{C}\dot{\pmb{x}_2}-\pmb{x}_1' + \pmb{\mathsf{E}}^\top\pmb{x}_1- \lo_1^\top(\pmb{x}_1)\mathcal{C}\pmb{x}_2 & = \pmb{0}
\end{split}
\end{equation}
The linear operators, $\lo_1$, $\lo_2$, and the matrix $\pmb{\mathsf{E}}$ are defined as,
\begin{equation}\label{eq:linear_operators}
\lo_1 (\pmb{x}_1)  = \begin{bmatrix} \tilde{\pmb{\omega}} & \pmb{0} \\ \tilde{\pmb{\ve}} & \tilde{\pmb{\omega}} \end{bmatrix} \hspace{0.5cm} ; \hspace{0.5cm}
\lo_2 (\pmb{x}_2)=  \begin{bmatrix} \pmb{0} & \tilde{\pmb{f}} \\ \tilde{\pmb{f}} & \tilde{\pmb{m}} \end{bmatrix} \hspace{0.5cm} ; \hspace{0.5cm}  \pmb{\mathsf{E}}= \lo_1 \begin{pmatrix} \begin{bmatrix} 1 \\ \bm 0_5 \end{bmatrix} \end{pmatrix}
\end{equation}
The above description is geometrically-exact with quadratic nonlinearities only.
The intrinsic modes are introduced and the projection of the state variables is such  $\pmb{x}_1 = \pmb{\phi}_1\pmb{q}_1$ and $\pmb{x}_2 = \pmb{\phi}_2\pmb{q}_2$. After a Galerkin projection of Eqs. \ref{eq2:intrinsic_eqs}, the equations of motion take the following form:

\begin{equation}
\label{eq2:sol_qs}
\begin{split}
\dot{\pmb{q}}_{1} &=  \pmb{\omega} \odot  \pmb{q}_{2} - \pmb{\Gamma}_{1} \pmb{:} \left(\pmb{q}_{1} \otimes \pmb{q}_{1} \right) - \pmb{\Gamma}_{2} \pmb{:} \left( \pmb{q}_{2} \otimes  \pmb{q}_{2} \right) + \bm{\eta}  \\
\dot{\pmb{q}}_{2} &= -\pmb{\omega} \odot \pmb{q}_{1} + \pmb{\Gamma}_{2}^{\top} \pmb{:} \left( \pmb{q}_{2} \otimes  \pmb{q}_{1} \right)
\end{split}
\end{equation}
A very clean implementation of the contraction and the structural terms in Eqs. \ref{eq2:sol_qs} is achieved in JAX as shown in the snippet below
\begin{minted}[frame=single]{python}
@jax.jit
def contraction_gamma3(gamma2: jnp.ndarray,
                       q1: jnp.ndarray,
                       q2: jnp.ndarray) -> jnp.ndarray:

    res = jnp.einsum('jik,jk->i', gamma2,
                     jnp.tensordot(q1, q2, axes=0))
    return res

@jax.jit
def f_12(omega, gamma1, gamma2, q1, q2):

    F1 = (omega * q2 - contraction_gamma1(gamma1, q1)
          - contraction_gamma2(gamma2, q2))
    F2 = -omega * q1 + contraction_gamma3(gamma2, q1, q2)

    return F1, F2
\end{minted}

This description is geometrically-exact, with nonlinearities encapsulated in the modal couplings of the third-order tensors $\pmb{\Gamma}_{1}$ and $\pmb{\Gamma}_{2}$ (the former introduces the gyroscopic terms in the dynamics and the latter introduces the strain-force nonlinear relation). $\pmb{\eta}$ is the modal projection of the external forcing terms. They are computed as integrals along the load-path 1D domain as an inner product: $\langle \pmb{u},\pmb{v}  \rangle = \int_{\mathcal{P}} \pmb{u}^\top \pmb{v} ds$, for any $\pmb{u}\in\mathbb{R}^6$ and $\pmb{v}\in\mathbb{R}^6$:

\begin{align}\label{eq2:gammas12}
\Gamma_{1}^{ijk} & = \langle \pmb{\phi}_{1i}, \lo_1(\pmb{\phi}_{1j})\pmb{\psi}_{1k}\rangle, \nonumber \\
\Gamma_{2}^{ijk} & = \langle \pmb{\phi}_{1i}, \lo_2(\pmb{\phi}_{2j})\pmb{\psi}_{2k}\rangle,  \\
\eta_{i} & = \langle \pmb{\phi}_{1i}, \pmb{f}_1\rangle  \nonumber
\end{align}
$\pmb{\psi}_1 = \bm{\mathcal{M}}\pmb{\phi}_1$ and $\pmb{\psi}_2 = \bm{\mathcal{C}}\pmb{\phi}_2$ are also cast as momentum and strain mode shapes and approximated using the LNMs of the FE model. In other words, each natural vibration mode can be uniquely expressed in terms of velocity, force/moment, momentum, or strain variables. While those would be redundant in a conventional linear vibration analysis, they will enable to identify all the coefficients in Eqs. \eqref{eq2:sol_qs}.

\begin{minted}[frame=single]{python}
@jax.jit
def f_gamma1(phi1: jnp.array, psi1: jnp.array) -> jnp.array:
    """Gamma1 tensor calculation.

    Parameters
    ----------
    phi1 : jnp.array
        Velocity modal shapes (Nmx6xNn)
    psi1 : jnp.array
        Momentum modal shapes (Nmx6xNn)
    Returns
    -------
    jnp.array
        Gamma1 tensor (NmxNmxNm)

    """
    f1 = jax.vmap(lambda u, v: jnp.tensordot(functions.L1(u), v, axes=(1, 1)),
                  in_axes=(1, 2), out_axes=2)  # iterate nodes
    f2 = jax.vmap(f1, in_axes=(0, None), out_axes=0)  # modes in 1st tensor
    L1 = f2(phi1, psi1)  # Nmx6xNmxNm
    gamma1 = jnp.einsum('isn,jskn->ijk', phi1, L1)
    return gamma1
\end{minted}

** Bridging full and reduced descriptions through modal spaces
A resulting set of four intrinsic modal shapes are directly linked to the displacement modal shapes, $\bm \phi_0$ obtained from the global FEM as output of the dynamic condensation:

1. Velocity modes, $\bm \phi_1 = \bm \phi_0$, which follow after the linear relation with displacements: $\bm x_1 = \dot{\bm x}_0$, $\bm \phi_1 \bm q_1 = \bm \phi_0 \dot{\bm q}_0$. 

2. Momentum modes, $\bm \psi_1 = \bm M_a \bm \phi_0$. For arbitrary distributed mass models, the dynamic condensation technique will produce a fully-populated $\bm M_a$ matrix, and the various couplings will be captured after the matrix multiplication. 

3. Force/moment modes, $\bm \phi_2 = \mathcal{S}(\bm K_a \bm \phi_0)$, represent the internal stress resultants in the structure as the sum, $\mathcal{S}$, along the main load-paths of equilibrium forces and moments produced by the modal deformations.
   # As a consequence, results are presented in the mid-point between nodes because more information cannot be extracted in terms of linear stresses from one node to the other.
   # Note that if $\bm{\mathfrak{f}} = \bm K_a \bm \Phi_0|^{1-3}$ are the internal forces and $\bm{\mathfrak{m}} = \bm K_a \bm \Phi_0|^{3-6}$ the internal moments, the moments produced by the internal forces also need to be taken into account: $\bm \Phi_2|^{3-6} = \mathcal{S}(\bm{\mathfrak{m}} + \bm{r}_{\frac{1}{2}} \times \bm{\mathfrak{f}})$.
   
4. Strain modes are approximated from the linearisation of the equations as $\bm \psi_2 = -\bm \phi_{0}' + \pmb{E}^{\top}\bm \phi_{0}$, with  with the derivative taken along the spanwise coordinate, $s$. $\pmb{E}^{\top}$ is a constant matrix in Eq. \ref{eq:linear_operators}.

** COMMENT Time domain unsteady aerodynamics
Various representations has been adopted to construct reduced-order models in unsteady aerodynamics. The doublet-lattice method (DLM)  [[cite:&ALBANO1969]] is a transfer function approach; the unsteady vortex lattice method \cite{Katz2001} is a state-space approach; and system identification approaches from CFD often use impulse response methods \cite{Silva2017}. We will make use of the DLM, a numerical solution to the compressible potential equation, a linearisation of the Navier-Stocks equations with no viscosity and isentropic assumptions:
\begin{equation}\label{eq3:potential_aero}
(1 - M^2_\infty)\frac{\partial^2 \hat{\phi}}{\partial x^2} +\frac{\partial^2 \hat{\phi}}{\partial y^2} +\frac{\partial^2 \hat{\phi}}{\partial z^2} -\frac{2M^2_{\infty}}{U_{\infty}}\frac{\partial^2 \hat{\phi}}{\partial x \partial t}-\frac{M^2_{\infty}}{U^2_\infty}\frac{\partial^2 \hat{\phi}}{\partial t^2}=0
\end{equation}
here the Mach number, $M_\infty$ is also assumed to be time-invariant in the linearization process.
It is solved by elementary solutions, which allows finding the solution in the frequency domain around complex geometries via superposition, which makes it very fast and robust, therefore being popular in industry for aeroelastic analysis [[cite:&PALACIOS2023]].
The main surfaces are discretised into boxes and doublet lines placed at the quarter chord of each box or panel, while the downwash is evaluated at the 3/4 chord midspan. This will be solved in MSc Nastran and then the frequency-domain physics are transform into the time-domain using a rational-function approximation (RFA). The classical method by Roger \citep{Roger1977}  Accordingly, the GAFs in Eq. \eqref{eq3:eta_ah} are approximated here for a given Mach number as,
\begin{equation}\label{eq3:rogers_approx}
\bm{Q}_{HH}(k) = \pmb{\mathcal{A}}_0 + (ik)\pmb{\mathcal{A}}_1 + (ik)^2\pmb{\mathcal{A}}_2 + \sum_{p=1}^{N_p}\frac{ik}{\gamma_p + ik}\pmb{\mathcal{A}}_{p+2}
\end{equation}
$\pmb{\mathcal{A}}_0$ is just $\bar{\bm{Q}}_{HH}(0)$. For a set of reduced frequencies $k_n$ and a fixed Mach number, the transfer function between modal displacements and modal forces is given by the matrices $\bar{\bm{Q}}_{HH}(k_n)\in\mathbb{C}^{N_m\times N_m}$. The best-fit $\pmb{\mathcal{A}}_i$ matrices (all of which are real) are calculated via an optimization approach [[cite:&CEA2021b]]. The first three terms are known as aerodynamic stiffness, damping and inertia, respectively, and the terms in the expansion are known as aerodynamic lags, which describe an exponential decay response under step function.
A similar approach is followed to include gust loads, approximating now $\bm{Q}_{HW}(k) \in\mathbb{C}^{N_m\times N_p}$, which maps a prescribed panel's upwash,  $\bar{v}_{g}$, to modal forces. The (dimensional) frequency-domain upwash, on a panel $j$ is 

\begin{equation}
\bar{v}_{gj}(\omega) = \left(\bm{n}_j \cdot {\bar{\bm{v}}_g}\right) e^{-i\omega(\bm{x}_j-\bm{x}_0)/U_\infty}
\end{equation}
where $\bm{n}_j$ is the normal to panel $j$, $\bm{v}_g(t)$ is the velocity vector of the gust (usually with non-zero components in the z-direction for a normal gust and in y-direction for a lateral gust), $\bm{x}_j$ are the spatial coordinates of the control point in panel $j$, and $\bm{x}_0$ the position of the gust origin. The normal of each panel could be updated as the structure deforms for a complete nonlinear analysis of the gust. However this would entail updating a complex panel geometry for a very short period of time and it is deemed a second order effect here, so no updating of $\bm{n} \cdot \bm{v}_g$ has been implemented for this work. In particular, ''1-cos'' gust profiles are considered.
# The GAFs due to the gust $\textbf{v}_g/U_\infty$ can be then written as 
# \begin{equation}
# \AIC_g(p)=\AIC_{g0}+\textbf{C}_g\left(p\textbf{I}-\textbf{A}_g\right)^{-1}\textbf{B}_g
# \end{equation}
# For gust response analysis the approach introduced in \cite{Kier2009} is followed, so a RFA on $\bar{\bm{Q}}_{HJ}$ is carried out allowing the definition of any upwash function and preventing the spiral nature of the gust problem when approximating directly $\bar{\bm{Q}}_{HJ} \bar{w}_{gj}$. The force in the frequency domain due to a spanwise homogeneous gust is
# \begin{equation}
# \bar{\eta}_{gust}(\omega) = \frac12 \rho_\infty U_\infty^2  \bar{\bm{Q}}_{HJ}(\omega)\bar{w}_{gj}(\omega)
# \end{equation}
The forces in time domain are obtained after applying the inverse Fourier transform to Roger's approximation, Eq. \eqref{eq3:rogers_approx}, and to the definition of the aerodynamic states. The final expression for the aerodynamic modal forces is,
\begin{equation}\label{eq3:eta_full}
\begin{split}
\bm{\eta}_a = \tfrac12\rho_\infty U_\infty^2 & \left(\vphantom{\sum_{p=1}^{N_p}} \pmb{\mathcal{A}}_0\bm{q}_0 +\frac{c}{2U_\infty}\pmb{\mathcal{A}}_1 \bm{q}_1 +\left(\frac{c}{2U_\infty}\right)^2 \pmb{\mathcal{A}}_2\dot{\bm{q}}_1   \right.  \\
& \left. + \pmb{\mathcal{A}}_{g0}\bm{v}_g +\frac{c}{2U_\infty}\pmb{\mathcal{A}}_{g1} \dot{\bm{v}}_g +\left(\frac{c}{2U_\infty}\right)^2 \pmb{\mathcal{A}}_{g2}\ddot{\bm{v}}_g +  \sum_{p=1}^{N_p} \pmb{\lambda}_p  \right) 
\end{split}
\end{equation}

This need to be combined with linear system of ODE describing the aerodynamic states:
\begin{align}
 \dot{\bm{\lambda}}_p &= -\frac{2U_\infty \gamma_p }{c}\bm{\lambda}_p +  \pmb{\mathcal{A}}_{p+2}\bm{q}_1 
 \qquad \textup{for} \qquad p=1,\ldots,N_p
\end{align}

The term $\bm{q}_0$ is the displacement modal amplitude and $\bm{q}_1$ is the velocity modal amplitude; note both displacement and velocity amplitudes are used to define the inputs to the aerodynamic subproblem. For convenience in the formulation the aerodynamic states are rescaled with the dynamic pressure$.

bibliographystyle:plain
# bibliography:/home/acea/Documents/Engineering.bib
bibliography:/home/acea/Documents/Engineering.bib
